package main

import (
	"io"
	"net/http"
	"os"

	"github.com/labstack/echo/v4"
)

func main() {
	e := echo.New()
	/*
		e.GET("/", func(c echo.Context) error {
			return c.String(http.StatusOK, "Hello, World!")
		})
	*/

	// 서버 실행 후 이 링크로 시험해 보세요: http://localhost:1323/users/Joe
	// 그러면 웹브라우저에 "Joe"가 출력될 겁니다.
	e.GET("/users/:id", getUser)

	// 서버 실행 후 이 링크로 시험해 보세요: http://localhost:1323/show?team=x-men&member=wolverine
	// 그러면 웹브라우저에 "team:x-men, member:wolverine"이 출력될 겁니다.
	e.GET("/show", show)

	/*
		서버 실행 후 터미널에서 다음 명령을 실행해 보세요.
		$ curl -F "name=Joe Smith" -F "email=joe@labstack.com" http://localhost:1323/save

		그러면 터미널에 "name:Joe Smith, email:joe@labstack.com"이 출력될 겁니다.
	*/
	e.POST("/save", save)

	/*
		서버 실행 후 터미널에서 다음 명령을 실행해 보세요.
		$ curl -F "name=Joe Smith" -F "avatar=@/etc/hosts" http://localhost:1323/save2
	*/
	e.POST("/save2", save2)

	e.Logger.Fatal(e.Start(":1323"))
}

func getUser(c echo.Context) error {
	// User ID from path `users/:id`
	id := c.Param("id")
	return c.String(http.StatusOK, id)
}

func show(c echo.Context) error {
	// Get team and member from the query string
	team := c.QueryParam("team")
	member := c.QueryParam("member")
	return c.String(http.StatusOK, "team:"+team+", member:"+member)
}

func save(c echo.Context) error {
	// Get name and email
	name := c.FormValue("name")
	email := c.FormValue("email")
	return c.String(http.StatusOK, "name:"+name+", email:"+email+"\n")
}

func save2(c echo.Context) error {
	// Get name
	name := c.FormValue("name")
	// Get avatar
	avatar, err := c.FormFile("avatar")
	if err != nil {
		return err
	}

	// Source
	src, err := avatar.Open()
	if err != nil {
		return err
	}
	defer src.Close()

	// Destination
	dst, err := os.Create(avatar.Filename)
	if err != nil {
		return err
	}
	defer dst.Close()

	// Copy
	if _, err = io.Copy(dst, src); err != nil {
		return err
	}

	return c.HTML(http.StatusOK, "<b>Thank you! "+name+"</b>")
}
